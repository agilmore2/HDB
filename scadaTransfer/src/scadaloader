#!/bin/sh 
#
# chkconfig: 345 99 1
# description: SCADA Loader Process
# processname: poll4csv.pl

#h  This script is used to start or stop the HDB XA21 SCADA dataloader
#h  
#h  Usage: scadaloader [-h] <start | stop | status>
#h  
#h  options:
#h  
#h     -h       Help.
#h     start   Start the HDB dataloader
#h     stop    Stop the HDB dataloader
#h 
#################################################################################

#Set HDB_ENV here, so we can run this as a init daemon
HDB_ENV=/wrg/hdb/apps
APP_USER=app_user

# Display usage.
exec=`basename $0`
usage='(echo ; echo "Usage: $exec [-h] <start | stop | status>" ; echo )'

SCADA_XFERDIR=$HDB_ENV/scadaTransfer/work
#or this for aplx003
#SCADA_XFERDIR=$HDB_ENV/scadaTransfer/work/dev

# Check command line argument.
if test $# -eq 0 ; then
     eval $usage
     exit 1 
fi


# Display help manual.
help() # [prefix]
{
  _h__prefix=${1:-"^#h "}
  sed -n 's,'"$_h__prefix"'\(.*\),\1,p' $0
  return 0;
}

status_hdb_loader()
{
    pid=`pgrep -f poll4csv.pl`
    if [ -z "$pid" ]
    then
	echo "ERROR! SCADA Polling script is not running!"
    else
	echo "OK: SCADA Polling script is running!"
    fi
}


# Start loader daemon.
start_hdb_loader()
{
echo "Starting hdb scada loader in directory:"
echo "     $SCADA_XFERDIR"
/bin/su - $APP_USER -c ". $HDB_ENV/bashrc_hdb_app; \
                       cd $SCADA_XFERDIR; \
		nohup perl ../src/poll4csv.pl -a /wrg/hdb/apps/.app_user_login \
                  -f 'csv_.*[0-9]$' \
                  -d . &>>poll4csv.out &"

}


# Stop loader daemon.
stop_hdb_loader()
{
#should dynamically find this

echo "Stopping hdb scada loader"
    kpid=`pkill -f poll4csv -U $APP_USER -n`
    if [ -z "$kpid" ]
    then
	echo "OK: SCADA Polling script is STOPPED!"
    else
	echo "ERROR: SCADA Polling Stopping script!"
    fi
#/bin/su - $APP_USER -c "source $HDB_ENV/.cshrc_hdb_app; \
#	             pkill -f poll4csv -U uchdba -n"
}

# Parse command line options.
option=
for input in $* ; do
     case $input in
        -h|-H|-help) help ; exit 0 ;;
        start     ) option=start ;;
        stop      ) option=stop ;;
        status    ) option=status ;;
        *          ) echo ; echo "\"$input\" is not a valid option."
                     eval $usage
                     exit 1 ;;
     esac
done

# Start or stop the polling script.
action=
case "$option" in
   start) action=started ;
          start_hdb_loader ;
    ;;
   stop) action=stopped ;
          stop_hdb_loader ;
    ;;
   status) action=status ;
          status_hdb_loader ;
    ;;
esac

echo

